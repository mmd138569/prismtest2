<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <!--  <ControlTemplate x:Key="rounded_Edittxt" TargetType="{x:Type TextBox}">
        <Border  CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">

        </Border>
            <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="borders" Value="{StaticResource Button.MouseOver.Background}"/>
                <Setter Property="BorderBrush" TargetName="borders" Value="{StaticResource Button.MouseOver.Border}"/>
            </Trigger> -->
    <!--
           <Trigger Property="IsEnabled" Value="False">
               <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
               <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
           </Trigger>

           <Trigger Property="Width" Value="Auto">
               <Setter Property="MinWidth" Value="100"/>
           </Trigger>
           <Trigger Property="Height" Value="Auto">
               <Setter Property="MinHeight" Value="20"/>
           </Trigger>
           <Trigger Property="IsMouseOver" Value="True"></Trigger>
    </ControlTemplate.Triggers>

</ControlTemplate>-->
    <ControlTemplate x:Key="round" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--<ControlTemplate x:Key="My_SVG" TargetType="{x:Type Path}">
        <Path Stroke="Black" Fill="Gray"
              Data="M 10,100 C 10,300 300,-200 300,100" />
    </ControlTemplate>-->
    <!--<Path x:Key="TestIcon" Fill="#FAFAFF">
        <Path.Data>
          <PathGeometry Figures="M13 2C11.894531 2 11 2.894531 11 4C11 4.777344 11.445313 5.449219 12.09375 5.78125L8 14L3.53125 10.28125C3.820313 9.933594 4 9.488281 4 9C4 7.894531 3.105469 7 2 7C0.894531 7 0 7.894531 0 9C0 10.105469 0.894531 11 2 11C2.136719 11 2.277344 10.996094 2.40625 10.96875L4.09375 19L21.90625 19L23.59375 10.96875C23.722656 10.996094 23.863281 11 24 11C25.105469 11 26 10.105469 26 9C26 7.894531 25.105469 7 24 7C22.894531 7 22 7.894531 22 9C22 9.488281 22.179688 9.933594 22.46875 10.28125L18 14L13.90625 5.78125C14.554688 5.449219 15 4.777344 15 4C15 2.894531 14.105469 2 13 2 Z M 4 21L4 22.5C4 23.328125 4.671875 24 5.5 24L20.5 24C21.328125 24 22 23.328125 22 22.5L22 21Z"/>
        </Path.Data>
    </Path>-->
    <Style x:Key="ErorLabel">
        <Style.Triggers>
    <EventTrigger  RoutedEvent="Window.Loaded">
        <BeginStoryboard>
            <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="(TextBlock.Opacity)" 
                                 From="0" To="1" 
                                 AutoReverse="True" 
                                 RepeatBehavior="Forever"
                                 BeginTime="0:0:0" Duration="0:0:0.5" >
                </DoubleAnimation>
            </Storyboard>
        </BeginStoryboard>
    </EventTrigger>
    </Style.Triggers>
        </Style>
    <PathGeometry x:Key="TestIcon" Figures="M13 2C11.894531 2 11 2.894531 11 4C11 4.777344 11.445313 5.449219 12.09375 5.78125L8 14L3.53125 10.28125C3.820313 9.933594 4 9.488281 4 9C4 7.894531 3.105469 7 2 7C0.894531 7 0 7.894531 0 9C0 10.105469 0.894531 11 2 11C2.136719 11 2.277344 10.996094 2.40625 10.96875L4.09375 19L21.90625 19L23.59375 10.96875C23.722656 10.996094 23.863281 11 24 11C25.105469 11 26 10.105469 26 9C26 7.894531 25.105469 7 24 7C22.894531 7 22 7.894531 22 9C22 9.488281 22.179688 9.933594 22.46875 10.28125L18 14L13.90625 5.78125C14.554688 5.449219 15 4.777344 15 4C15 2.894531 14.105469 2 13 2 Z M 4 21L4 22.5C4 23.328125 4.671875 24 5.5 24L20.5 24C21.328125 24 22 23.328125 22 22.5L22 21Z"/>
    <PathGeometry x:Key="circul" Figures="M16 4C9.3844239 4 4 9.3844287 4 16C4 22.615571 9.3844239 28 16 28C22.615576 28 28 22.615571 28 16C28 9.3844287 22.615576 4 16 4 z M 16 6C21.534697 6 26 10.465307 26 16C26 21.534693 21.534697 26 16 26C10.465303 26 6 21.534693 6 16C6 10.465307 10.465303 6 16 6 z"/>

    <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}" >
        <Border Background="{TemplateBinding Background}"
                x:Name="Bd" BorderBrush="Bisque"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Bisque" TargetName="Bd"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="100"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>